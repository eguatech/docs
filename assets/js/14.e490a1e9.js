(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{410:function(a,s,e){"use strict";e.r(s);var t=e(55),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"operadores"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#operadores"}},[a._v("#")]),a._v(" Operadores")]),a._v(" "),e("p",[a._v("Os operadores são elementos fundamentais nas linguagens de programação, pois permitem a manipulação e o processamento de dados. Existem diferentes tipos de operadores, como operadores matemáticos, operadores de comparação e operadores lógicos. Eles seguem uma hierarquia de prioridade, determinando a ordem em que as operações são executadas.")]),a._v(" "),e("p",[a._v("Aqui estão os exemplos de operadores em égua:")]),a._v(" "),e("ul",[e("li",[e("p",[e("code",[a._v("**")]),a._v(" - Exponenciação: calcula a potência de um número.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("**")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a 8")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("*")]),a._v(" - Multiplicação: realiza a multiplicação entre dois valores.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a 20")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("/")]),a._v(" - Divisão: realiza a divisão entre dois valores.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a 5")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("+")]),a._v(" - Adição: realiza a soma entre dois valores ou concatenação de strings.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a 7")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" texto "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Olá, "')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mundo!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// texto é igual a "Olá, mundo!"')]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("-")]),a._v(" - Subtração: realiza a subtração entre dois valores.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a 5")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("%")]),a._v(" - Resto da divisão (Módulo): retorna o resto da divisão entre dois valores.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a 1")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v(">")]),a._v(" - Maior que: verifica se um valor é maior que outro.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a verdadeiro")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("<")]),a._v(" - Menor que: verifica se um valor é menor que outro.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a verdadeiro")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("==")]),a._v(" - Igual a: verifica se dois valores são iguais.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"4"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a verdadeiro")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("!=")]),a._v(" - Diferente de: verifica se dois valores são diferentes.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a verdadeiro")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("e")]),a._v(" - E lógico: verifica se duas condições são verdadeiras.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("e")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a verdadeiro")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("ou")]),a._v(" - Ou lógico: verifica se pelo menos uma das condições é verdadeira.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" resultado "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ou")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// resultado é igual a verdadeiro")]),a._v("\n")])])])])]),a._v(" "),e("p",[a._v("Compreender a utilização e a ordem de prioridade dos operadores é essencial para construir expressões e executar cálculos de forma correta em seus programas.")]),a._v(" "),e("h3",{attrs:{id:"operadores-especiais"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#operadores-especiais"}},[a._v("#")]),a._v(" Operadores especiais")]),a._v(" "),e("p",[a._v("Existem outros operadores especieais relacionados a manipulação bit a bit, como:")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("<<")]),a._v(" - Deslocamento bit a bit à esquerda;")]),a._v(" "),e("li",[e("code",[a._v(">>")]),a._v(" - Deslocamento bit a bit à direita;")]),a._v(" "),e("li",[e("code",[a._v("&")]),a._v(" - e bit a bit;")]),a._v(" "),e("li",[e("code",[a._v("^")]),a._v(" - Ou exclusivo bit a bit;")]),a._v(" "),e("li",[e("code",[a._v("|")]),a._v(" - Ou bit a bit;")]),a._v(" "),e("li",[e("code",[a._v("em")]),a._v(" - em;")])]),a._v(" "),e("h3",{attrs:{id:"prioridade-dos-operadores"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prioridade-dos-operadores"}},[a._v("#")]),a._v(" Prioridade dos operadores")]),a._v(" "),e("p",[a._v("Os operadores têm uma ordem clara de prioridade, semelhante à matemática, onde as operações são realizadas em uma ordem específica (ordenadas de cima para baixo com a maior precedência no topo).")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("**")])]),a._v(" "),e("li",[e("code",[a._v("/")]),a._v(", "),e("code",[a._v("*")]),a._v(" e "),e("code",[a._v("%")])]),a._v(" "),e("li",[e("code",[a._v("+")]),a._v(" e "),e("code",[a._v("-")])]),a._v(" "),e("li",[e("code",[a._v("<<")]),a._v(" e "),e("code",[a._v(">>")])]),a._v(" "),e("li",[e("code",[a._v("&")])]),a._v(" "),e("li",[e("code",[a._v("|")]),a._v(" e "),e("code",[a._v("^")])]),a._v(" "),e("li",[e("code",[a._v(">")]),a._v(" e "),e("code",[a._v("<")])]),a._v(" "),e("li",[e("code",[a._v("==")]),a._v(" e "),e("code",[a._v("!=")])]),a._v(" "),e("li",[e("code",[a._v("em")]),a._v(", "),e("code",[a._v("e")]),a._v(" e "),e("code",[a._v("ou")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);